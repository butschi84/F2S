apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
  namespace: f2s
data:
  prometheus.rules: |-
    groups:
    - name: recording_rules
      rules:
        # number of requests/sec completed by all available function-containers
        - record: f2sscaling_function_requests_completed_rate
          expr: sum(rate(f2s_requests_completed_total[15s])) by (functionname)

        # number of available function containers
        - record: f2sscaling_function_deployment_available_replicas
          expr: sum(kube_deployment_status_replicas_available) by (functionname)

        # how many req/s can one function container perform
        - record: f2sscaling_function_completion_performance_per_container_request_rate
          expr: f2sscaling_function_requests_completed_rate / f2sscaling_function_deployment_available_replicas

        # calculated number of containers needed to perform the incoming requests
        - record: f2sscaling_function_containers_required_total
          expr: sum(f2sscaling_function_request_pressure_rate) by (functionname) / sum(f2sscaling_function_completion_performance_per_container_request_rate) by (functionname)

        # Incoming Request Rate for Function
        - record: f2sscaling_function_incoming_request_rate
          expr: sum by(functionname) (rate(f2s_requests_incoming_total[15s]))

        # Requests Backlog Growth for Function
        - record: f2sscaling_function_requests_backlog_growth_rate
          expr: (sum by(functionname) (delta(f2s_active_requests_total[15s]))) > 0 / 15

        # Request Pressure for Function (incoming req/s + req backlog growth)
        - record: f2sscaling_function_request_pressure_rate
          expr: f2sscaling_function_incoming_request_rate + f2sscaling_function_requests_backlog_growth_rate
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    rule_files:
      - /etc/prometheus/prometheus.rules
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.monitoring.svc:9093"
    scrape_configs:
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics.kube-system:8080']
        metric_relabel_configs:
          - source_labels: [__name__]
            regex: 'kube_deployment_status_replicas_.*'
            action: keep
          - source_labels: [namespace]
            regex: 'f2s-containers'
            action: keep
          - source_labels: [__name__, deployment]
            separator: ";"
            regex: '(kube_deployment_status_replicas_available);(.*)'
            target_label: 'functionname'
            replacement: '${2}'
            action: replace
      - job_name: 'f2s-metrics'
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - f2s
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_port_number]
            regex: 8081
            action: keep
        metrics_path: /metrics
