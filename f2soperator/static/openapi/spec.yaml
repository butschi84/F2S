openapi: 3.0.3
info:
  title: F2S API
  description: F2S Function as a Service Platform
  version: 1.0.0

tags:
  - name: Configuration
    description: Manage F2S Configuration
  - name: K8S
    description: Get Information about F2S Kubernetes Items
  - name: Containers
    description: Interact with F2S-Containers K8S Namespace
  - name: Invoke
    description: Invoke F2S Functions
  - name: F2S Internal
    description: Internal F2S API Endpoints for Debugging
paths:
  /invoke/{target}:
    get:
      summary: invoke a f2s function
      tags:
        - Invoke
      parameters:
        - in: path
          name: target
          required: true
          schema:
            type: string
            example: my-endpoint
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /config:
    get:
      summary: get current f2s configuration
      tags:
        - Configuration
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /events:
    get:
      summary: get last events
      tags:
        - F2S Internal
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /endpoints:
    get:
      summary: get all current k8s functions endpoints
      tags:
        - K8S
        - F2S Internal
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  kind:
                    type: string
                  apiVersion:
                    type: string
                  metadata:
                    type: object
                  items:
                    type: array
                    items:
                      type: object
  /dispatcher:
    get:
      summary: get current dispatcher data
      tags:
        - Configuration
        - F2S Internal
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    endpoints:
                      type: array
                      items:
                        type: object
                        properties:
                          ip_address:
                            type: string
                          ingflight_requests:
                            type: number
  /functions:
    get:
      summary: get all configured functions
      tags:
        - Configuration
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  kind:
                    type: string
                  apiVersion:
                    type: string
                  metadata:
                    type: object
                  items:
                    type: array
                    items:
                      type: object
    post:
      summary: create a new f2s function
      tags:
        - Configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "my-function"
                spec:
                  type: object
                  properties:
                    endpoint:
                      type: string
                      example: "/my-endpoint"
                    method:
                      type: string
                      example: "get"
                target:
                  type: object
                  properties:
                    containerImage:
                      type: string
                      example: nginx
                    endpoint:
                      type: string
                      example: "/"
                    port:
                      type: number
                      example: 80
                    minReplicas:
                      type: number
                      example: 1
                    maxReplicas:
                      type: number
                      example: 1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /functions/{id}:
    get:
      summary: get specific function
      tags:
        - Configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
    delete:
      summary: delete specific function
      tags:
        - Configuration
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /deployments:
    get:
      summary: get all current f2s deployments
      tags:
        - Containers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  kind:
                    type: string
                  apiVersion:
                    type: string
                  metadata:
                    type: object
                  items:
                    type: array
                    items:
                      type: object
    post:
      summary: create a test deployment
      tags:
        - Containers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
